{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\data\\\\screens\\\\IcxScreen.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport * as firebase from 'firebase';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ChatBackground from \"../components/ChatBackGround\";\nimport Header from \"../components/Header\";\nYellowBox.ignoreWarnings(['Setting a timer']);\n\nvar IcxScreen = function IcxScreen() {\n  function getUserData(uid) {\n    firebase.database().ref('users/' + uid).once(\"value\", function (snap) {\n      setUsericx(snap.val().icxservice);\n    });\n  }\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      icxArray = _useState2[0],\n      setIcx = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      usericx = _useState4[0],\n      setUsericx = _useState4[1];\n\n  useEffect(function () {\n    var itemsRef1 = firebase.database().ref('icx');\n    itemsRef1.on('value', function (snapshot) {\n      var items = snapshot.val();\n      var newState1 = [];\n\n      for (var item in items) {\n        newState1.push({\n          id: item,\n          icx: items[item].icx,\n          time: items[item].time\n        });\n      }\n\n      setIcx(newState1);\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUserData(user.uid);\n      }\n    });\n  }, []);\n\n  if (usericx) {\n    return React.createElement(ChatBackground, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.MainContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, React.createElement(FlatList, {\n      style: styles.container,\n      data: icxArray,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(View, {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            backgroundColor: '#fff',\n            borderRadius: 4,\n            borderWidth: 0.5,\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#e9967a',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 18\n          }\n        }, \" \", item.icx), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }\n        }, item.time, \" \"));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })));\n  } else {\n    return React.createElement(ChatBackground, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/lock.png\"),\n      style: {\n        height: 200,\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Locked Service\")));\n  }\n};\n\nvar styles = StyleSheet.create({\n  MainContainer: {\n    justifyContent: 'center',\n    flex: 1,\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 10,\n    marginTop: 30\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  }\n});\nexport default IcxScreen;","map":{"version":3,"sources":["E:/data/screens/IcxScreen.js"],"names":["React","Component","useEffect","useState","firebase","createBottomTabNavigator","ChatBackground","Header","YellowBox","ignoreWarnings","IcxScreen","getUserData","uid","database","ref","once","snap","setUsericx","val","icxservice","icxArray","setIcx","usericx","itemsRef1","on","snapshot","items","newState1","item","push","id","icx","time","auth","onAuthStateChanged","user","styles","MainContainer","container","display","flexDirection","justifyContent","backgroundColor","borderRadius","borderWidth","padding","margin","color","fontSize","flex","alignItems","require","height","width","StyleSheet","create","marginLeft","marginRight","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport {View,Text,Button, FlatList, StyleSheet, Image, YellowBox} from 'react-native';\nimport * as firebase from 'firebase';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ChatBackground from '../components/ChatBackGround'\nimport Header from '../components/Header'\n\nYellowBox.ignoreWarnings(['Setting a timer']);\nconst IcxScreen = () => {\n    function getUserData(uid) {\n        firebase.database().ref('users/' + uid).once(\"value\", snap => {\n            // setUserData(snap.val())\n            setUsericx(snap.val().icxservice)\n        })\n      }\n      const [icxArray , setIcx] = useState([])   \n      const [usericx, setUsericx] = useState(false)   \n     \n          useEffect(() => {\n            // Update the document title using the browser API\n            const itemsRef1 = firebase.database().ref('icx');\n            itemsRef1.on('value', (snapshot) => {\n              let items = snapshot.val();\n              // console.log(items)\n              let newState1 = [];\n              for (let item in items) {\n                newState1.push({\n                  id: item,\n                  icx: items[item].icx,\n                  time: items[item].time\n                });\n              }\n              setIcx(newState1)\n              \n            });\n      \n        \n            firebase.auth().onAuthStateChanged(user => {\n              if (user) {\n                  getUserData(user.uid)\n              }\n          })\n\n          }, []);\n      \n      \n    if(usericx){     \n  return(\n            <ChatBackground>\n              <View style={styles.MainContainer}>\n           \n              <FlatList\n              style={styles.container}\n            data={icxArray}\n            renderItem={({ item }) => (\n              <View style={{ display : 'flex',flexDirection : 'column', justifyContent : 'space-between', backgroundColor : '#fff', borderRadius : 4, borderWidth : 0.5,  padding : 10, margin : 10 }}>\n                 <Text style={{ color : '#e9967a', fontSize : 20 }}> {item.icx}</Text>\n                <Text>{item.time} </Text>\n              </View>\n            )}\n          />\n          </View>   \n          </ChatBackground>\n  )\n            }\n            else{\n\n              return(\n                <ChatBackground>\n            \n                <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n             \n                <Image\n                   source={require(\"../assets/lock.png\")}\n                   style={{ height : 200, width : 200 }}\n                  />\n              <Header>Locked Service</Header>\n            </View>\n            </ChatBackground>\n              )\n            }\n}\n\nconst styles = StyleSheet.create({\n    MainContainer: {\n      justifyContent: 'center',\n      flex: 1,\n      marginLeft: 10,\n      marginRight: 10,\n      marginBottom: 10,\n      marginTop: 30,\n    },\n  \n    item: {\n      padding: 10,\n      fontSize: 18,\n      height: 44,\n    },\n    \n  });\n\nexport default IcxScreen;"]},"metadata":{},"sourceType":"module"}