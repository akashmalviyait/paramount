{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\data\\\\screens\\\\CcxScreen.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport * as firebase from 'firebase';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ChatBackground from \"../components/ChatBackGround\";\nimport Header from \"../components/Header\";\nYellowBox.ignoreWarnings(['Setting a timer']);\nvar Tab = createBottomTabNavigator();\n\nvar CcxScreen = function CcxScreen() {\n  function getUserData(uid) {\n    firebase.database().ref('users/' + uid).once(\"value\", function (snap) {\n      setCcxuser(snap.val().ccxservice);\n    });\n  }\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      ccxArray = _useState2[0],\n      setCcx = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ccxUser = _useState4[0],\n      setCcxuser = _useState4[1];\n\n  useEffect(function () {\n    var itemsRef3 = firebase.database().ref('ccx');\n    itemsRef3.on('value', function (snapshot) {\n      var items = snapshot.val();\n      console.log;\n      var newState3 = [];\n\n      for (var item in items) {\n        newState3.push({\n          id: item,\n          ccx: items[item].ccx,\n          time: items[item].time\n        });\n      }\n\n      setCcx(newState3);\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUserData(user.uid);\n      }\n    });\n  }, []);\n\n  if (ccxUser) {\n    return React.createElement(ChatBackground, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, React.createElement(FlatList, {\n      data: ccxArray,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(View, {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            backgroundColor: '#fff',\n            borderRadius: 4,\n            borderWidth: 0.5,\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#e9967a',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 18\n          }\n        }, \" \", item.ccx, \" \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 18\n          }\n        }, item.time));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })));\n  } else {\n    return React.createElement(ChatBackground, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/lock.png\"),\n      style: {\n        height: 200,\n        width: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Locked Service\")));\n  }\n};\n\nexport default CcxScreen;","map":{"version":3,"sources":["E:/data/screens/CcxScreen.js"],"names":["React","Component","useEffect","useState","firebase","createBottomTabNavigator","ChatBackground","Header","YellowBox","ignoreWarnings","Tab","CcxScreen","getUserData","uid","database","ref","once","snap","setCcxuser","val","ccxservice","ccxArray","setCcx","ccxUser","itemsRef3","on","snapshot","items","console","log","newState3","item","push","id","ccx","time","auth","onAuthStateChanged","user","flex","justifyContent","alignItems","display","flexDirection","backgroundColor","borderRadius","borderWidth","padding","margin","color","fontSize","require","height","width"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport {View,Text,Button, FlatList, Image, YellowBox} from 'react-native';\nimport * as firebase from 'firebase';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ChatBackground from '../components/ChatBackGround'\nimport Header from '../components/Header'\n\n\nYellowBox.ignoreWarnings(['Setting a timer']);\nconst Tab = createBottomTabNavigator();\nconst CcxScreen = () => {\n    function getUserData(uid) {\n        firebase.database().ref('users/' + uid).once(\"value\", snap => {\n            // console.log(snap.val\n            setCcxuser(snap.val().ccxservice)\n        })\n      }\n\n        \n          const [ccxArray , setCcx] = useState([])   \n          const [ccxUser, setCcxuser] = useState(false)\n      \n      \n          useEffect(() => {\n             const itemsRef3 = firebase.database().ref('ccx');\n            itemsRef3.on('value', (snapshot) => {\n              let items = snapshot.val();\n              console.log\n              let newState3 = [];\n              for (let item in items) {\n                newState3.push({\n                  id: item,\n                  ccx: items[item].ccx,\n                  time: items[item].time\n                });\n              }\n              setCcx(newState3)\n              \n            });\n      \n      \n            \n      \n            firebase.auth().onAuthStateChanged(user => {\n              if (user) {\n                //   console.log(icxUser)\n                  // console.log(user.object)\n                  getUserData(user.uid)\n              }\n          })\n\n          // setInterval(() => {\n          //   // console.log('Interval triggered');\n          //   userService()\n          // }, 1000);\n            \n          }, []);\n      \n      \nif(ccxUser){\n  return(\n\n      \n          // console.log(icxArray)\n          \n          <ChatBackground>\n              <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n           \n              <FlatList\n            data={ccxArray}\n            renderItem={({ item }) => (\n              <View style={{ display : 'flex',flexDirection : 'column', justifyContent : 'space-between', backgroundColor : '#fff', borderRadius : 4, borderWidth : 0.5,  padding : 10, margin : 10 }}>\n                 <Text style={{ color : '#e9967a', fontSize : 20 }}> {item.ccx} </Text>\n                 <Text>{item.time}</Text>\n              </View>\n            )}\n          />\n          </View>\n          </ChatBackground>\n       \n      \n  \n  )\n            }\n            else{\n              return(\n                <ChatBackground>\n            \n                <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n             \n                <Image\n                   source={require(\"../assets/lock.png\")}\n                   style={{ height : 200, width : 200 }}\n                  />\n              <Header>Locked Service</Header>\n            </View>\n            </ChatBackground>\n              );\n            }\n}\n\n\n\nexport default CcxScreen;"]},"metadata":{},"sourceType":"module"}